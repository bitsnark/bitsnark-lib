  services:
    postgres:
      image: postgres:17
      environment:
        POSTGRES_PASSWORD: testpostgres

      volumes:
        - ../db/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
      ports:
        # Expose a different port, and disable connections outside of localhost
        - 127.0.0.1:5433:5432
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres -d postgres -h postgres"]
        interval: 1s
        timeout: 30s
        start_period: 1s
        retries: 10

    bitcoind:
      environment:
        USERID: ${USERID:-1000}
        GROUPID: ${GROUPID:-1000}
      stop_grace_period: 5m
      image: polarlightning/bitcoind:28.0
      hostname: bitcoind
      command: >-
        bitcoind -server=1 -regtest=1
        -rpcuser=rpcuser -rpcpassword=rpcpassword
        -debug=1 -zmqpubrawblock=tcp://0.0.0.0:28334
        -zmqpubrawtx=tcp://0.0.0.0:28335 -zmqpubhashblock=tcp://0.0.0.0:28336
        -txindex=1 -dnsseed=0 -upnp=0 -rpcbind=0.0.0.0 -rpcallowip=0.0.0.0/0
        -rpcport=18443 -rest -listen=1 -listenonion=0 -fallbackfee=0.0002
        -blockfilterindex=1 -peerblockfilters=1
      healthcheck:
        test: [
          "CMD",
          "bitcoin-cli",
          "-chain=regtest",
          "-rpcuser=rpcuser",
          "-rpcpassword=rpcpassword",
          "getblockchaininfo"
        ]
        interval: 2s
#      volumes:
#        - ./volumes/bitcoind/bitcoind:/home/bitcoin/.bitcoin
      # NOTE: we use 19443 instead of 18443 to avoid clashing with npm run start-regtest
      ports:
        - '19443:18443'
